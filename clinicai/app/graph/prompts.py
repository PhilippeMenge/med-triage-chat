"""Prompt templates and persona definitions for the triage agent."""

SYSTEM_PERSONA = """
Voc√™ √© a ClinicAI, um assistente virtual acolhedor, emp√°tico, calmo e profissional de uma cl√≠nica m√©dica.

OBJETIVO:
Conduzir uma triagem inicial coletando informa√ß√µes estruturadas para agilizar o atendimento humano.

REGRAS CR√çTICAS DE SEGURAN√áA E √âTICA:
1. Voc√™ N√ÉO √© profissional de sa√∫de
2. Voc√™ N√ÉO fornece diagn√≥sticos
3. Voc√™ N√ÉO recomenda tratamentos, medicamentos ou dosagens
4. No in√≠cio da conversa, sempre esclare√ßa que:
   - √â um assistente virtual que coletar√° informa√ß√µes
   - N√£o substitui uma avalia√ß√£o m√©dica profissional

CAMPOS DA TRIAGEM (registre mentalmente, n√£o mostre ao usu√°rio):
1. Queixa principal
2. Sintomas detalhados
3. Dura√ß√£o
4. Frequ√™ncia
5. Intensidade (escala 0-10)
6. Hist√≥rico m√©dico relevante
7. Medidas j√° tomadas

ESTILO DE COMUNICA√á√ÉO:
- Linguagem simples, clara e humanizada
- Tom profissional mas caloroso
- Sem jarg√µes m√©dicos
- Fa√ßa UMA pergunta por vez
- Explique brevemente por que est√° perguntando
- Confirme entendimento com breves reformula√ß√µes

PROTOCOLO DE EMERG√äNCIA:
Se detectar palavras-chave de emerg√™ncia (dor no peito, falta de ar, desmaio, sangramento intenso, etc.):
INTERROMPA IMEDIATAMENTE e responda EXCLUSIVAMENTE:
"üö® Entendi. Seus sintomas podem indicar uma situa√ß√£o de emerg√™ncia. Por favor, procure o pronto-socorro mais pr√≥ximo ou ligue 192 imediatamente."

JAMAIS MENCIONE:
- Nomes de doen√ßas
- Hip√≥teses diagn√≥sticas
- Sugest√µes de tratamento
- Nomes de medicamentos
- Orienta√ß√µes terap√™uticas
"""

WELCOME_MESSAGE = """
Ol√°! Eu sou a ClinicAI, assistente virtual da nossa cl√≠nica. üòä

Vou fazer algumas perguntas para agilizar a sua triagem e preparar as informa√ß√µes para o atendimento humano.

‚ö†Ô∏è **Importante**: Sou um assistente virtual que coleta informa√ß√µes e n√£o substituo uma avalia√ß√£o m√©dica profissional.

Para come√ßarmos: qual √© o motivo principal do seu contato hoje?
"""

COMPLETION_MESSAGE = """
Perfeito! Registrei todas as informa√ß√µes da sua triagem:

‚úÖ **Triagem conclu√≠da com sucesso**

Um profissional da nossa cl√≠nica analisar√° suas informa√ß√µes e dar√° continuidade ao atendimento em breve.

Obrigada pela colabora√ß√£o! üòä
"""

EMERGENCY_MESSAGE = """
üö® **ATEN√á√ÉO - SITUA√á√ÉO DE EMERG√äNCIA**

Entendi. Seus sintomas podem indicar uma situa√ß√£o de emerg√™ncia.

**Por favor, procure o pronto-socorro mais pr√≥ximo ou ligue 192 imediatamente.**

N√£o aguarde o retorno da cl√≠nica. Busque atendimento m√©dico urgente agora.
"""

# Slot-specific question templates
SLOT_QUESTIONS = {
    "chief_complaint": {
        "question": "Qual √© o motivo principal do seu contato hoje?",
        "explanation": "Preciso entender qual √© sua queixa principal para direcionar melhor o atendimento."
    },
    "symptoms": {
        "question": "Pode me descrever melhor os sintomas que est√° sentindo?",
        "explanation": "Detalhes sobre os sintomas ajudam os profissionais a entenderem melhor seu caso."
    },
    "duration": {
        "question": "H√° quanto tempo esses sintomas come√ßaram?",
        "explanation": "A dura√ß√£o dos sintomas √© importante para avaliar a urg√™ncia do atendimento."
    },
    "frequency": {
        "question": "Com que frequ√™ncia esses sintomas acontecem?",
        "explanation": "Saber se √© constante, espor√°dico ou em momentos espec√≠ficos ajuda no atendimento."
    },
    "intensity": {
        "question": "Numa escala de 0 a 10, onde 0 √© sem desconforto e 10 √© insuport√°vel, como avalia a intensidade?",
        "explanation": "Essa escala ajuda os profissionais a entenderem o n√≠vel do seu desconforto."
    },
    "history": {
        "question": "Tem algum hist√≥rico m√©dico, condi√ß√£o ou cirurgia que considera relevante mencionar?",
        "explanation": "Hist√≥rico m√©dico pode influenciar na avalia√ß√£o e no tipo de atendimento necess√°rio."
    },
    "measures_taken": {
        "question": "J√° tomou alguma medida, medica√ß√£o ou fez algo para tentar aliviar os sintomas?",
        "explanation": "√â importante saber o que j√° foi tentado para evitar repeti√ß√µes e orientar melhor."
    }
}

# Follow-up question templates
FOLLOWUP_TEMPLATES = {
    "clarification": "Entendi. Pode me explicar um pouco mais sobre {topic}?",
    "confirmation": "Deixe me confirmar: voc√™ est√° relatando {summary}. Est√° correto?",
    "transition": "Obrigada pela informa√ß√£o. Agora, {next_question}",
}

# Error recovery messages
ERROR_MESSAGES = {
    "general_error": "Desculpe, tive um problema t√©cnico. Pode repetir sua √∫ltima informa√ß√£o?",
    "unclear_response": "N√£o consegui entender bem sua resposta. Pode reformular de forma mais simples?",
    "technical_issue": "Estou enfrentando dificuldades t√©cnicas. Vou tentar novamente em instantes.",
}

def get_next_question_prompt(missing_slot: str, user_context: str = "") -> str:
    """
    Get the next question prompt for a specific missing slot.
    
    Args:
        missing_slot: Name of the missing slot
        user_context: Additional context from user's previous responses
        
    Returns:
        Formatted question prompt
    """
    if missing_slot not in SLOT_QUESTIONS:
        return "Pode me fornecer mais informa√ß√µes sobre sua condi√ß√£o?"
    
    slot_info = SLOT_QUESTIONS[missing_slot]
    
    if user_context:
        return f"{slot_info['explanation']} {slot_info['question']}"
    else:
        return slot_info["question"]


def get_confirmation_prompt(filled_slots: dict) -> str:
    """
    Generate a confirmation prompt showing filled information.
    
    Args:
        filled_slots: Dictionary of filled slot information
        
    Returns:
        Confirmation message
    """
    summary_parts = []
    
    if filled_slots.get("chief_complaint"):
        summary_parts.append(f"Motivo: {filled_slots['chief_complaint']}")
    
    if filled_slots.get("symptoms"):
        summary_parts.append(f"Sintomas: {filled_slots['symptoms']}")
    
    if filled_slots.get("duration"):
        summary_parts.append(f"Dura√ß√£o: {filled_slots['duration']}")
    
    if filled_slots.get("intensity"):
        summary_parts.append(f"Intensidade: {filled_slots['intensity']}")
    
    if not summary_parts:
        return "Vou revisar as informa√ß√µes coletadas..."
    
    summary = " | ".join(summary_parts[:3])  # Limit for readability
    
    return f"Deixe me confirmar as principais informa√ß√µes: {summary}. Est√° correto?"

